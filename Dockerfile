# ---- Base (pnpm enabled) ----
FROM node:20-slim AS base
ENV NODE_ENV=production
WORKDIR /app
# Enable pnpm via corepack (bundled with Node 20)
RUN corepack enable

# ---- Dependencies (dev deps рж╕рж╣, build-ржПрж░ ржЬржирзНржп) ----
FROM base AS deps
ENV NODE_ENV=development
# Cache hits ржмрж╛рзЬрж╛рждрзЗ рж╢рзБржзрзБ manifest + lock ржХржкрж┐
COPY package.json pnpm-lock.yaml ./
# Deterministic install
RUN pnpm install --frozen-lockfile

# ---- Build (TypeScript рж╣рж▓рзЗ tsc ржЪрж╛рж▓рж╛ржмрзЗ; JS рж╣рж▓рзЗ ржЖржкржирж╛рж░ build рж╕рзНржХрзНрж░рж┐ржкрзНржЯ) ----
FROM base AS build
ENV NODE_ENV=development
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .
# ЁЯТб .env ржЗржорзЗржЬрзЗ ржХржкрж┐ ржХрж░ржмрзЗржи ржирж╛; runtime-ржП env/pass ржХрж░рзБржи
RUN pnpm build

# ---- Prune (production deps only) ----
FROM base AS prune
ENV NODE_ENV=production
WORKDIR /app
COPY package.json pnpm-lock.yaml ./
COPY --from=deps /app/node_modules ./node_modules
# devDependencies ржХрзЗржЯрзЗ ржжрж┐ржи
RUN pnpm prune --prod

# ---- Runner (minimal, non-root, no pnpm needed) ----
FROM node:20-slim AS runner
ENV NODE_ENV=production
WORKDIR /app

# Non-root user
RUN groupadd -g 10001 nodejs && useradd -r -u 10001 -g nodejs nodeuser

# рж╢рзБржзрзБржЗ runtime ржкрзНрж░рзЯрзЛржЬржирзАрзЯ ржЬрж┐ржирж┐рж╕ ржХржкрж┐ ржХрж░рзБржи
COPY --from=prune /app/node_modules ./node_modules
COPY package.json ./
# ржЖржкржирж╛рж░ build output (e.g., dist/) ржХржкрж┐ ржХрж░рзБржи
COPY --from=build /app/dist ./dist

# Env (ржкрзЛрж░рзНржЯ/рж╣рзЛрж╕рзНржЯ) тАФ compose/cli ржжрж┐рзЯрзЗ override ржХрж░рждрзЗ ржкрж╛рж░рзЗржи
ENV PORT=5010
ENV HOST=0.0.0.0

# Express рж╕рж╛ржзрж╛рж░ржгржд ржПржХржЯрж╛ржЗ ржкрзЛрж░рзНржЯрзЗ рж╢рзЛржирзЗ
EXPOSE 5010
EXPOSE 5011

# Healthcheck (рж░рзБржЯ/ржкрж╛рже ржирж┐ржЬрзЗрж░ ржорждрзЛ ржарж┐ржХ ржХрж░рзБржи)
# HEALTHCHECK --interval=30s --timeout=5s --start-period=20s --retries=3 \
#     CMD node -e "require('http').get(`http://localhost:${process.env.PORT||5050}/health`, r => process.exit(r.statusCode>=200 && r.statusCode<500 ? 0 : 1)).on('error', ()=>process.exit(1))"

# Non-root рж╣рж┐рж╕рзЗржмрзЗ рж░рж╛ржи ржХрж░рзБржи
USER nodeuser

# рж╕рж░рж╛рж╕рж░рж┐ node ржжрж┐рзЯрзЗ рж╕рж╛рж░рзНржнрж╛рж░ ржЪрж╛рж▓рж╛ржи (pnpm рж▓рж╛ржЧржмрзЗ ржирж╛)
# package.json -> "build": "tsc", ржЖржЙржЯржкрзБржЯ: dist/server.js ржзрж░рзЗ ржирзЗрзЯрж╛ рж╣рж▓рзЛ
CMD ["node", "dist/server.js"]
